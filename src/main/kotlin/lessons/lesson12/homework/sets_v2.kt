package ru.arab.lessons.lesson12.homework
fun main() {
//    Проверить, что размер коллекции больше 5 элементов.
    val numbers = listOf(-1, 2, -3, 4, -5, 8, 264)
    val a1 = numbers.size > 5
    println(a1)

//    Проверить, что коллекция пустая
    val a2 = numbers.isEmpty()
    println(a2)

//    Проверить, что коллекция не пустая
    val a3 = numbers.isNotEmpty()
    println(a3)

//    Взять элемент по индексу или создать значение если индекса не существует
    val a4 = numbers.getOrElse(2) {}
    println(a4)

//    Собрать коллекцию в строку
    val a5 = numbers.joinToString(", ")
    println(a5)

//    Посчитать сумму всех значений
    val a6 = numbers.sum()
    println(a6)

//    Посчитать среднее
    val a7 = numbers.average()
    println(a7)

//    Взять максимальное число
    val a8 = numbers.maxOrNull()
    println(a8)

//    Взять минимальное число
    val a9 = numbers.minOrNull()
    println(a9)

//    Взять первое число или null
    val a10 = numbers.firstOrNull()
    println(a10)

//    Проверить что коллекция содержит элемент
    val a11 = numbers.contains(8)
    println(a11)

//    Реши задачи подходящим методом для работы с коллекцией. Для каждой задачи есть свой метод, не повторяйся. Список методов в рекомендациях под заданиями.
//
//    Задачи на обработку коллекций
//    Отфильтровать коллекцию по диапазону 18-30
    val a12 = numbers.filter { it in 18..30 }
    println(a12)

//    Выбрать числа, которые не делятся на 2 и 3 одновременно
    val a13 = numbers.filter { it % 2 == 0 && it % 3 == 0 }
    println(a13)

//    Очистить текстовую коллекцию от null элементов
    val string = listOf("one", "two", "three", "four", "five")

//    Преобразовать текстовую коллекцию в коллекцию длин слов
    val a14 = string.map { it.length }
    println(a14)

//    Преобразовать текстовую коллекцию в мапу, где ключи - перевёрнутые слова, а значения - длина слов
    val a15 = string.associate { it.reversed() to it.length }
    println(a15)

//    Отсортировать список в алфавитном порядке
    val a16 = string.sorted()
    println(a16)

//    Взять первые 3 элемента списка
    val a17 = string.take(2)
    println(a17)

//    Распечатать квадраты элементов списка
    val a18 = numbers.forEach { println(it * it) }
    println(a18)

//    Группировать список по первой букве слов
    val a19 = string.groupBy { it.first() }
    println(a19)

//    Очистить список от дублей
    val a20 = string.distinct()
    println(a20)

//    Отсортировать список по убыванию
    val a21 = string.sortedDescending()
    println(a21)

//    Взять последние 3 элемента списка
    val a22 = string.takeLast(3)
    println(a22)

    println(collection1(listOf(1411, -100, -100, -100, -100, -100, 3)))
    println(numbers(listOf(85, 58, 90, 74, 88, 67, 95, 92, 50, 42, 12)))
    println(
        catalog(
            listOf(
                "Стол",
                "табурет",
                "ваза",
                "Кружка",
                "Зеркало",
                "ковер",
                "Шкаф",
                "часы",
                "Люстра",
                "подушка",
                "Картина",
                "столик",
                "Вазон",
                "шторы",
                "Пуф",
                "книга",
                "Фоторамка",
                "светильник",
                "Коврик",
                "вешалка",
                "Подставка",
                "телевизор",
                "Комод",
                "полка",
                "Абажур",
                "диван",
                "Кресло",
                "занавеска",
                "Бра",
                "пепельница",
                "Глобус",
                "статуэтка",
                "Поднос",
                "фигурка",
                "Ключница",
                "плед",
                "Тумба",
                "игрушка",
                "Настенные часы",
                "подсвечник",
                "Журнальный столик",
                "сувенир",
                "Корзина для белья",
                "посуда",
                "Настольная лампа",
                "торшер",
                "Этажерка"
            )
        )
    )
    println(
        averagelength(
            listOf(
                "Стол",
                "табурет",
                "ваза",
                "Кружка",
                "Зеркало",
                "ковер",
                "Шкаф",
                "часы",
                "Люстра",
                "подушка",
                "Картина",
                "столик",
                "Вазон",
                "шторы",
                "Пуф",
                "книга",
                "Фоторамка",
                "светильник",
                "Коврик",
                "вешалка",
                "Подставка",
                "телевизор",
                "Комод",
                "полка",
                "Абажур",
                "диван",
                "Кресло",
                "занавеска",
                "Бра",
                "пепельница",
                "Глобус",
                "статуэтка",
                "Поднос",
                "фигурка",
                "Ключница",
                "плед",
                "Тумба",
                "игрушка",
                "Настенные часы",
                "подсвечник",
                "Журнальный столик",
                "сувенир",
                "Корзина для белья",
                "посуда",
                "Настольная лампа",
                "торшер",
                "Этажерка"
            )
        )
    )
    println(numbers1(listOf(1, 3, 5, 7, 3, 1, 8, 9, 9, 7)))
    println(numbers2(listOf(2, 15, 15, 15, 15, null, 15), 18))

}


//    Задача 24. Характеристика числовой коллекции
//    Напиши функцию, которая принимает коллекцию чисел и возвращает строку с характеристикой коллекции используя конструкцию when
//    Если коллекция пустая - “Пусто”
//    Если количество элементов меньше пяти - “Короткая”
//    Если коллекция начинается с 0 - “Стартовая”
//    Если сумма всех чисел больше 10000 - “Массивная”
//    Если среднее значение равно 10 - “Сбалансированная”
//    Если длина строки образованная склеиванием коллекции в строку равна 20 - “Клейкая”
//    Если максимальное число меньше -10 - “Отрицательная”
//    Если минимальное число больше 1000 - “Положительная”
//    Если содержит одновременно числа 3 и 14 - “Пи***тая”
//    Иначе - “Уникальная”
//    Вызвать метод с данными, подходящими под каждую из веток

fun collection1(a24: List<Int>): String {
    return when {
        a24.isEmpty() -> "Пусто"
        a24.size < 5 -> "Короткая"
        a24.firstOrNull() == 0 -> "Стартовая"
        a24.sum() > 10000 -> "Массивная"
        a24.average() == 10.0 -> "Сбалансированная"
        a24.joinToString("").length == 20 -> "Клейкая"
        a24.maxOrNull()!! < -10 -> "Отрицательная"
        a24.minOrNull()!! > 1000 -> "Положительная"
        a24.containsAll(listOf(3, 14)) -> "Пи***тая"
        else -> "Уникальная"
    }
}

//    Задача 25. Анализ учебных оценок
//    Напиши функцию, которая принимает список чисел и возвращает список чисел.
//    Цель: Отфильтровать удовлетворительные оценки (>=60), отсортировать оставшиеся по возрастанию и взять первые 3. Вызывай методы обработки и фильтрации последовательно один из другого, чтобы результат предыдущего метода являлся основой для следующего.
fun numbers(a25: List<Int>): List<Int> {
    val b = a25.filter { it >= 60 }
        .sorted()
        .take(3)
    return b
}

//    Задача 26. Создание каталога по первой букве
//    Напиши функцию, которая принимает список строк и возвращает словарь с ключом - буквой и значением - строкой.
//    Начальные значения: val list = listOf(
//        "Стол", "табурет", "ваза", "Кружка", "Зеркало", "ковер", "Шкаф", "часы", "Люстра", "подушка", "Картина", "столик", "Вазон", "шторы", "Пуф", "книга", "Фоторамка", "светильник", "Коврик", "вешалка", "Подставка", "телевизор", "Комод", "полка", "Абажур", "диван", "Кресло", "занавеска", "Бра", "пепельница", "Глобус", "статуэтка", "Поднос", "фигурка", "Ключница", "плед", "Тумба", "игрушка", "Настенные часы", "подсвечник", "Журнальный столик", "сувенир", "Корзина для белья", "посуда", "Настольная лампа", "торшер", "Этажерка"
//    )
//    Цель: Привести все слова в списке к нижнему регистру, сгруппировать в каталог по первой букве используя метод groupBy
fun catalog(a26: List<String>): Map<Char, List<String>> {
    return a26.map { it.lowercase() }
        .groupBy { it.first() }
}

//    Задание 27. Подсчёт средней длины слов в списке
//    Напиши функцию, которая принимает список строк и возвращает строку.
//    Цель: Перевести все слова в количество букв, подсчитать среднее значение. Вернуть форматированный текст с двумя знаками после запятой, используя функцию format и подходящий шаблон.
fun averagelength(a27: List<String>): String {
    return "%.2f".format(a27.map { it.length }
        .average())
}

//    Задание 28: Категоризация чисел
//    Напиши функцию, которая принимает список чисел и возвращает словарь с ключами - строками и значениями - числами.
//    Начальные значения: val numbers = listOf(1, 3, 5, 7, 3, 1, 8, 9, 9, 7)
//    Цель: Отобрать уникальные числа, отсортировать по убыванию и сгруппировать по четности (“четные” и “нечетные”).
fun numbers1(a28: List<Int>): Map<String, List<Int>> {
    return a28.distinct()
        .sortedDescending()
        .groupBy { if (it % 2 == 0) "четные" else "нечетные" }
}

//    Задание 29: Поиск первого подходящего элемента
//    Напиши функцию, которая принимает список чисел и число и возвращает nullable число.
//    Начальные значения: val ages = listOf(22, 18, 30, 45, 17, null, 60) и число для проверки возраста, например 18.
//    Цель: Найти первый возраст в списке, который соответствует условию (больше второго аргумента) и вернуть его, либо null если значения не нашлось.
fun numbers2(a29: List<Int?>, a30: Int): Int? {
    return a29.firstOrNull { it != null && it > a30 }
}





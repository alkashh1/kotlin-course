package ru.arab.lessons.lesson10.homework

fun main() {
    map()
    opt()
}
//Задачи на работу со словарём
fun map() {
//Создайте пустой неизменяемый словарь, где ключи и значения - целые числа.
    val emptyMap = mapOf<Int, Int>()
//Создайте словарь, инициализированный несколькими парами "ключ-значение", где ключи - float, а значения - double
    val a1 = mapOf(1F to 1.1, 2F to 2.2, 3F to 3.3)
//Создайте изменяемый словарь, где ключи - целые числа, а значения - строки.
    val a2 = mutableMapOf<Int, String>()
//Имея изменяемый словарь, добавьте в него новые пары "ключ-значение".
    a2[1] = "1"
//Используя словарь из предыдущего задания, извлеките значение, используя ключ. Попробуй получить значение с ключом, которого в словаре нет.
    println(a2[1])
//Удалите определенный элемент из изменяемого словаря по его ключу.
    a2.remove(1)
//Создайте словарь (ключи Double, значения Int) и выведи в цикле результат деления ключа на значение. Не забудь обработать деление на 0 (в этом случае выведи слово “бесконечность”)
    val a4 = mapOf(2.0 to 2, 3.0 to 3, 1.0 to 0)
    for ((a, b) in a4) {
        if (b != 0) {
            val c = a / b
            println(c)
        } else {
            println("бесконечность")
        }
    }
//Измените значение для существующего ключа в изменяемом словаре.
    a2[1] = "2"
//Создайте два словаря и объедините их в третьем изменяемом словаре через циклы.
    val a5 = mapOf(2.0 to 2, 3.0 to 3, 1.0 to 0)
    val a6 = mapOf(4.0 to 4, 5.0 to 5, 6.0 to 6)
    val a7 = mutableMapOf<Double, Int>()
    for ((a, b) in a5) {
        a7[a] = b
    }
    for ((a, b) in a6) {
        a7[a] = b
    }
    println(a7)
//Создайте словарь, где ключами являются строки, а значениями - списки целых чисел. Добавьте несколько элементов в этот словарь.
    val a8 = mutableMapOf<String, List<Int>>()
    a8["first"] = listOf(1, 2, 3)
    println(a8)
//Создай словарь, в котором ключи - это целые числа, а значения - изменяемые множества строк. Добавь данные в словарь. Получи значение по ключу (это должно быть множество строк) и добавь в это множество ещё строку. Распечатай полученное множество.
    val a9 = mutableMapOf<Int, MutableSet<String>>()
    a9[1] = mutableSetOf("smth1", "smth2")
    val a10 = a9[1]
    a10?.add("smth3")
    println(a9)
//Создай словарь, где ключами будут пары чисел. Через перебор найди значение у которого пара будет содержать цифру 5 в качестве первого или второго значения.
    val a11 = mapOf(1 to 2, 3 to 4, 5 to 6, 6 to 5)
    for ((a, b) in a11) {
        if (a == 5) {
            println("${a11[a]}->$a,$b")
        } else if (b == 5) {
            println("${a11[a]}->$a,$b")
        }
    }
}

//Задачи на подбор оптимального типа для словаря
fun opt() {
//Словарь библиотека: Ключи - автор книги, значения - список книг
    val a12 = mapOf<String, MutableList<String>>()
//Справочник растений: Ключи - типы растений (например, "Цветы", "Деревья"), значения - списки названий растений
    val a13 = mapOf<String, MutableList<String>>()
//Четвертьфинала: Ключи - названия спортивных команд, значения - списки игроков каждой команды
    val a14 = mapOf<String, List<String>>()
//Курс лечения: Ключи - даты, значения - список препаратов принимаемых в дату
    val a15 = mapOf<String, Set<String>>()
//Словарь путешественника: Ключи - страны, значения - словари из городов со списком интересных мест.
    val a16 = mapOf<String, Map<String, MutableList<String>>>()
}